1. 定位    -   更准
    1. icp        -       scan2scan     ->  r2000 激光质量非常好
    2. ndt        -       icp           ->      加快速度
    3. csm        -       穷举           1. 降采样地图 2. scan_pose 80*80*36
                                         -> 直到最精细的地图
    4. ekf        -       编码器/scan/反光板  1. pridect 2. update
    5. pf         -       采样滤波        [10, 10][2, 2]
    6. scan2map   -       hector(grid_map)
		  0. scan2scan容易出现漂移越来越大
                  1. scan grid_map(变化并不大)
                  2. grid_map(概率信息) 0.8 (马氏距离)
                  3. grid_map(离散信息) -> 线性信息(双线性差分)
    后端优化: 
    7. 滤波方法: 多传感器融合
    8. 图优化方式: 多传感器融合 
        1. odom 0 -> 1.0   error 0.9
            (1.0 - 0) - 0.9 -> 0.0  最小二乘 (位姿图思路)
        2. BA优化
            pose 3.2
            反光板(landmark) 0.1 0.8 3.0     (概率信息)
            error 3.2 2.5 0.3       最小二乘 (pose landmark)
    9. Q: 如何解决定位精度漂移问题
       A: 精度漂移本质上是由于scan与scan之间是相对约束, 思考怎样加上绝对约束

2. 建图    -   更好
    1. grid_map
        0. [index prob]
        1. 好看 -> 斜的 (车体斜着建图)
        2. 精度 -> 1. 定位精确度 2. 地图分辨率
        3. 消耗(1. 内存消耗 2. 检索消耗)
            1. 地图(prob(32位) -> (0-255))
            2. 有一些空白区域(没建图, 实际上消耗了内存) (sub_map) -> 总的map
        4. 地图修正
            1. 回环检测
            2. 优化
    2. 拓扑地图(路径规划)

3. 重定位  -   (可靠, 误成功率要低)
    1. amcl
    2. scan_context scan (marix[36, 30]), 检索scan_contextes
    3. csm
    4. 逻辑
	1. 小定位
	2. 静态重定位
	3. 快速重定位
	4. 动态重定位

1. amcl   稳定   纯定位
2. 在工作点实现精确定位
    1. icp匹配
3. 建图
    1. 作业点
    2. 常规位置(采样的方式定位, 触发点: scantomap)
4. 建图(精细地图)
    1. landmark(hector, 建图)
    2.  a. 基于已有粗略图
        b. hector建图
        目的:
            地图对准(landmark)
            0. 初步地图: 初始位姿, 初始地图

	    1. 初步地图建立
	    2. 初始位姿确立
            3. 如何确保scan2map在初步地图上匹配良好

